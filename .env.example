# PhotoVault Environment Configuration

# Copy this file to .env.local and fill in your actual values

# AWS Configuration
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-access-key-id
AWS_SECRET_ACCESS_KEY=your-secret-access-key
AWS_S3_BUCKET=photovault-storage-dev
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
# MongoDB Configuration
MONGODB_USERNAME=your_mongodb_username
MONGODB_PASSWORD=your_mongodb_password
=======
>>>>>>> Stashed changes
CLOUDFRONT_DOMAIN=your-cloudfront-domain.cloudfront.net

# AWS Cognito
COGNITO_USER_POOL_ID=us-east-1_xxxxxxxxx
COGNITO_CLIENT_ID=your-cognito-client-id
COGNITO_CLIENT_SECRET=your-cognito-client-secret

# Database
DATABASE_URL="postgresql://username:password@localhost:5432/photovault_dev"
<<<<<<< Updated upstream
=======
>>>>>>> c29745ad016536b3fcc94cb0b4d91795b91dcfdc
>>>>>>> Stashed changes

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRES_IN=7d

# API Configuration
API_BASE_URL=http://localhost:3001
FRONTEND_URL=http://localhost:3000

# Upload Configuration
MAX_FILE_SIZE=104857600
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/heic,image/webp,video/mp4,video/quicktime

# External Services
GEOCODING_API_KEY=your-geocoding-api-key
AI_SERVICE_API_KEY=your-ai-service-api-key

# Development
NODE_ENV=development
LOG_LEVEL=debug

# Production specific (when deploying)
# NEXT_PUBLIC_API_URL=https://your-api-domain.com
# AWS_S3_BUCKET=photovault-storage-prod
<<<<<<< Updated upstream
# DATABASE_URL="postgresql://username:password@your-db-host:5432/photovault_prod"
=======
<<<<<<< HEAD
# MONGODB_USERNAME=your_prod_mongodb_username
# MONGODB_PASSWORD=your_prod_mongodb_password
=======
# DATABASE_URL="postgresql://username:password@your-db-host:5432/photovault_prod"
>>>>>>> c29745ad016536b3fcc94cb0b4d91795b91dcfdc
>>>>>>> Stashed changes
